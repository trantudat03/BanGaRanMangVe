<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ONvRnTs0xgAAAABJRU5ErkJggg==
</value>
  </data>
</root>